{"version":3,"sources":["componets/ContactForm/ContactForm.module.css","componets/Header/Header.module.css","componets/Filter/Filter.module.css","componets/ContactListItem/ContactListItem.module.css","componets/Body/Body.module.css","componets/ContactList/ContactList.module.css","componets/ContactList/transitions/ContactLsTransition.module.css","componets/transitions/fade.module.css","contex/ThemeContext.js","hoc/whithTeme.js","componets/Header/Header.js","componets/Body/Body.js","helpers/constants.js","componets/ContactForm/ContactForm.js","componets/Filter/Filter.js","componets/ContactListItem/ContactListItem.js","componets/ContactList/ContactList.js","componets/App.js","index.js"],"names":["module","exports","themeConfig","light","headerBg","fontColor","bodybg","dark","ThemeContext","createContext","withTheme","WrappedComponent","props","Consumer","theme","whithTheme","toggleTheme","style","background","config","color","className","styles","theme_selector","label","type","switch","checked","onChange","event","currentTarget","value","slider","children","body","INITIAL_STATE_FORM","name","number","INITIAL_STATE_APP","contacts","filter","ContactForm","state","handleInputChange","target","setState","handleSubmit","e","onAddContacts","preventDefault","reset","this","phoneBook_form","phoneBook_item","onSubmit","phoneBook_lb","phoneBook_inp","buttonPhonBk","Component","Filter","phone_filter","phone_filterInp","TaskListItem","onRemove","list_PhoneLs","buttonPhoneLs","onClick","defaultProps","ContactList","Contact_list","TransitionGroup","component","map","id","CSSTransition","key","timeout","classNames","transition","ContactListItem","App","addContacts","uuidv4","some","alert","prevState","removeContacts","contact","changeFilter","getVisibleContacts","toLowerCase","includes","localStoregeContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","showContacts","length","Provider","in","fadeTransition","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d932a3b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBook_form\":\"ContactForm_phoneBook_form__2j9M8\",\"phoneBook_item\":\"ContactForm_phoneBook_item__2Rv0c\",\"buttonPhonBk\":\"ContactForm_buttonPhonBk__2kXzQ\",\"phoneBook_inp\":\"ContactForm_phoneBook_inp__m4Vb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme_selector\":\"Header_theme_selector__yW3V9\",\"label\":\"Header_label__CoKO_\",\"switch\":\"Header_switch__6EpjF\",\"slider\":\"Header_slider__bJGc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone_filter\":\"Filter_phone_filter__2_a3q\",\"phone_filterInp\":\"Filter_phone_filterInp__jTWTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_PhoneLs\":\"ContactListItem_list_PhoneLs__2XmS7\",\"buttonPhoneLs\":\"ContactListItem_buttonPhoneLs__2LtgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__3bCR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact_list\":\"ContactList_Contact_list__oawX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactLsTransition_enter__UBgH-\",\"enterActive\":\"ContactLsTransition_enterActive__1-mro\",\"exit\":\"ContactLsTransition_exit__3O4m-\",\"exitActive\":\"ContactLsTransition_exitActive__2y5tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1LufC\",\"enterActive\":\"fade_enterActive__34Y8k\",\"exit\":\"fade_exit__1xeyN\",\"exitActive\":\"fade_exitActive__1I4ue\"};","import { createContext } from 'react';\r\n\r\nexport const themeConfig = {\r\n  light: {\r\n    headerBg: '#d2e0e3',\r\n    fontColor: '#2a5c69',\r\n    bodybg: '#9ab7ba',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\nconst ThemeContext = createContext(themeConfig.light);\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport ThemeContext from '../contex/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => <WrappedComponent {...props} theme={theme} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React from 'react';\r\n\r\nimport whithTheme from '../../hoc/whithTeme';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = ({ theme, toggleTheme }) => (\r\n  <header\r\n    style={{\r\n      background: theme.config.headerBg,\r\n      color: theme.config.fontColor,\r\n    }}\r\n  >\r\n    <div className={styles.theme_selector}>\r\n      <span className={styles.label}>\r\n        Toggle theme: {''}\r\n        {theme.type}\r\n      </span>\r\n      <label className={styles.switch}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={theme.type === 'light'}\r\n          onChange={event => toggleTheme(event.currentTarget.value)}\r\n        />\r\n        <span className={styles.slider}></span>\r\n      </label>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default whithTheme(Header);\r\n","import React from 'react';\r\n\r\nimport whithTheme from '../../hoc/whithTeme';\r\n\r\nimport styles from './Body.module.css';\r\n\r\nconst Body = ({ theme, children }) => (\r\n  <div\r\n    className={styles.body}\r\n    style={{ color: theme.config.fontColor, background: theme.config.bodybg }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default whithTheme(Body);\r\n","const INITIAL_STATE_FORM = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst INITIAL_STATE_APP = {\r\n  contacts: [],\r\n  filter: '',\r\n  theme: 'light',\r\n};\r\n\r\nexport { INITIAL_STATE_FORM, INITIAL_STATE_APP };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { INITIAL_STATE_FORM } from '../../helpers/constants';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_FORM,\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { onAddContacts } = this.props;\r\n    e.preventDefault();\r\n    onAddContacts({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE_FORM });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={styles.phoneBook_form}>\r\n        <h2 className={styles.phoneBook_item}>Phonebook</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={styles.phoneBook_lb}>\r\n            Name\r\n            <input\r\n              className={styles.phoneBook_inp}\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <label className={styles.phoneBook_lb}>\r\n            Number\r\n            <input\r\n              className={styles.phoneBook_inp}\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.buttonPhonBk}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onRemove: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <div className={styles.phone_filter}>\r\n    <h3>Find my contacts</h3>\r\n    <input\r\n      type=\"text\"\r\n      value={filter}\r\n      className={styles.phone_filterInp}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport whithTheme from '../../hoc/whithTeme';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst TaskListItem = ({ theme, name, number, onRemove }) => (\r\n  <li className={styles.list_PhoneLs}>\r\n    <p\r\n      style={{\r\n        color: theme.config.fontColor,\r\n        background: theme.config.bodybg,\r\n      }}\r\n    >\r\n      {name}:{number}\r\n    </p>\r\n\r\n    <button type=\"button\" className={styles.buttonPhoneLs} onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default whithTheme(TaskListItem);\r\n\r\nTaskListItem.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  onRemove: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nimport styles from './ContactList.module.css';\r\nimport transition from '../ContactList/transitions/ContactLsTransition.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => (\r\n  <div className={styles.Contact_list}>\r\n    <h2>Contacts</h2>\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={200} classNames={transition}>\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onRemove={() => onRemove(id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.node,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\nimport ContactListForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nimport { INITIAL_STATE_APP } from '../helpers/constants';\r\nimport ThemeContext, { themeConfig } from '../contex/ThemeContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport fadeTransition from './transitions/fade.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_APP,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localStoregeContacts = localStorage.getItem('contacts');\r\n\r\n    if (localStoregeContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(localStoregeContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContacts = ({ name, number }) => {\r\n    const contacts = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    const overlap = this.state.contacts.some(\r\n      contacts => contacts.name === name,\r\n    );\r\n\r\n    if (!overlap) {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, contacts],\r\n        };\r\n      });\r\n    } else alert(`${name} is already in contacts`);\r\n  };\r\n\r\n  removeContacts = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = ({ target }) => {\r\n    const filter = target.value;\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n  };\r\n\r\n  toggleTheme = () => {\r\n    const { theme } = this.state;\r\n    this.setState({\r\n      theme: theme === 'dark' ? 'light' : 'dark',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { theme, filter, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    const showContacts = contacts.length;\r\n\r\n    return (\r\n      <ThemeContext.Provider\r\n        value={{\r\n          type: theme,\r\n          config: themeConfig[theme],\r\n        }}\r\n      >\r\n        <Header toggleTheme={this.toggleTheme} />\r\n        <Body>\r\n          <ContactListForm onAddContacts={this.addContacts} />\r\n          {showContacts > 1 && (\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n          )}\r\n\r\n          <CSSTransition\r\n            in={showContacts > 0}\r\n            timeout={250}\r\n            classNames={fadeTransition}\r\n            unmountOnExit\r\n          >\r\n            <ContactList\r\n              contacts={visibleContacts}\r\n              onRemove={this.removeContacts}\r\n            />\r\n          </CSSTransition>\r\n        </Body>\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componets/App';\r\n\r\nimport './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}